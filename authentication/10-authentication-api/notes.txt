downloaded express, bcrypt, cookie-parser, cors, helmet, joi, jesonwebtoken, mongoose, nodemailer

created basic server and required dependencies
started authRouter
before authcontroller, made a validation in middleware to check if user has provided our data to us
    validator.js:
        responsible for checking if the incoming request data is valid before backend processes it
        schema in validator.js defines what is required
        joi is a data validation library
            Defines schemas (rules for data)
            Validates data against those schemas
            Prevents bad data from reaching your database or business logic
then created utils to hash password
finished signup in auth controller

started sign in
made the schema for it, same as sign up
made hash validation to check password input iwht password in database
made a token
created cookie
 
created sign out and cleared cookie

created send verification
    for this created sendMail in middleware node mailer and create NODE_CODE_SENDING_EMAIL_ADDRESS and NODE_CODE_SENDING_EMAIL_PASSWORD in .env file
    made email layout
    made another function in hashing.js for hashing the code
        had to use hmac to hash the verificaiton code
        HMAC_VERIFICATION_CODE_SECRET in .env

created verify verificaiton code and created accept code schema

change password

forgot password
    similar to send verificaiton just a few changes


work on posts router ---- 
